Spring的一个关键的组件就是 AOP框架。 尽管如此，Spring IoC容器并不依赖于AOP

AOP代理（AOP Proxy）: AOP框架创建的对象，包含通知。 在Spring中，AOP代理可以是JDK动态代理或者CGLIB代理。
-------------------------------------------------------------------------------
Spring AOP中，当拦截对象实现了接口时，生成方式是用JDK的Proxy类。当没有实现任何接口时用的是GCLIB开源项目生成的拦截类的子类.
测试类		TmUserServiceImpl.java


spring的IoC容器是spring的核心，spring AOP是spring框架的重要组成部分。

-- 工厂方法
在传统的程序设计中，当调用者需要被调用者的协助时，通常由调用者来创建被调用者的实例。但在spring里创建被调用者的工作不再由调用者来完成，因此控制反转（IoC）；创建被调用者实例的工作通常由spring容器来完成，然后注入调用者，因此也被称为依赖注入（DI）， 依赖注入和控制反转是同一个概念 。